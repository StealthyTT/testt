blueprint:
  name: Binary Sensor with Light Control and Toggle Logic (No Helpers with Custom Times)
  description: |
    Turns on the light when the binary sensor detects motion, disables the automation if the light is toggled off and on twice within a short time,
    and re-enables it if the light has been off for a configurable amount of time. This version allows you to set the reset time and the light-off duration without helpers.
  domain: automation
  input:
    binary_sensor:
      name: Binary Sensor
      description: The binary sensor to detect changes in state.
      selector:
        entity:
          domain: binary_sensor
    light_entity:
      name: Light
      description: The light to control.
      selector:
        entity:
          domain: light
    motion_reset_timer:
      name: Motion Reset Timer
      description: Timer to reset toggle count after inactivity.
      selector:
        entity:
          domain: timer
    reset_time_duration:
      name: Reset Time Duration
      description: Time in minutes to wait before re-enabling the automation after it has been toggled off twice.
      default: 2
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutes"
    off_state_duration:
      name: Off State Duration
      description: Time in minutes that the light should be off before automation is re-enabled.
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutes"

variables:
  toggle_count: 0
  automation_enabled: true
  light_off_for_5min: false
  reset_time_duration: "{{ reset_time_duration }}"  # Duration in minutes (set by user)
  off_state_duration: "{{ off_state_duration }}"  # Duration in minutes (set by user)

# Triggers (top level)
trigger:
  - platform: state
    entity_id: !input 'binary_sensor'
    to: "on"
  - platform: state
    entity_id: !input 'light_entity'
    to: "off"
    for:
      minutes: "{{ off_state_duration }}"  # Light has been off for the specified duration (in minutes)

# Conditions (only proceed if automation is enabled)
condition:
  - condition: template
    value_template: "{{ automation_enabled == true }}"

# Actions (responding to triggers)
action:
  # Action triggered by motion detection (light turns on)
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'binary_sensor'
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input 'light_entity'
          - variables:
              toggle_count: 0  # Reset toggle count when motion is detected
          - service: timer.start
            target:
              entity_id: !input 'motion_reset_timer'  # Start/reset the motion reset timer

  # Action triggered when the light turns off (track toggles)
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'light_entity'
            state: "off"
        sequence:
          - variables:
              toggle_count: "{{ toggle_count + 1 }}"  # Increment toggle count when light turns off
          - service: timer.start
            target:
              entity_id: !input 'motion_reset_timer'  # Reset the timer
          - choose:
              # If toggled off and on twice, disable automation
              - conditions:
                  - condition: template
                    value_template: "{{ toggle_count >= 2 }}"
                sequence:
                  - variables:
                      automation_enabled: false  # Disable automation
                  - delay: "{{ reset_time_duration * 60 }}"  # Wait for reset time in seconds
                  - variables:
                      automation_enabled: true  # Re-enable automation

  # Reset toggle count after inactivity (reset after the timer is idle)
  - service: timer.start
    target:
      entity_id: !input 'motion_reset_timer'
