blueprint:
  name: Motion-Based Light Control with Toggle and Reset
  description: |
    Turns on the light when motion is detected, disables the automation if the light is toggled off and on within a short time, 
    and re-enables it if the light has been off for 5 minutes.
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: The motion sensor to detect motion.
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_entity:
      name: Light
      description: The light to control.
      selector:
        entity:
          domain: light
    toggle_count_helper:
      name: Toggle Count Helper
      description: The helper to count how many times the light has been toggled.
      selector:
        entity:
          domain: input_number
    automation_enabled_helper:
      name: Automation Enabled Helper
      description: The helper to enable or disable the automation.
      selector:
        entity:
          domain: input_boolean
    reset_timer:
      name: Reset Timer
      description: Timer to reset toggle count after inactivity.
      selector:
        entity:
          domain: timer
    light_off_timer:
      name: Light Off Timer
      description: Timer to track if the light has been off for 5 minutes.
      selector:
        entity:
          domain: timer

trigger:
  - platform: state
    entity_id: !input 'motion_sensor'
    to: "on"

condition:
  - condition: state
    entity_id: !input 'automation_enabled_helper'
    state: "on"  # Only proceed if automation is enabled

action:
  - service: light.turn_on
    target:
      entity_id: !input 'light_entity'
  
  - service: timer.start
    target:
      entity_id: !input 'reset_timer'  # Start the main reset timer

  - service: input_number.set_value
    target:
      entity_id: !input 'toggle_count_helper'
    data:
      value: 0  # Reset the toggle count
  
  - service: timer.start
    target:
      entity_id: !input 'light_off_timer'  # Start the 5-minute light-off timer
  
  # Monitor the light toggle and count how many times it's toggled
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'light_entity'
            state: "off"
        sequence:
          - service: input_number.increment
            target:
              entity_id: !input 'toggle_count_helper'
          
          - service: timer.start
            target:
              entity_id: !input 'reset_timer'  # Reset the timer

          - service: timer.start
            target:
              entity_id: !input 'light_off_timer'  # Restart the 5-minute off timer
          
      - conditions:
          - condition: state
            entity_id: !input 'light_entity'
            state: "on"
          - condition: numeric_state
            entity_id: !input 'toggle_count_helper'
            above: 0
          - condition: state
            entity_id: !input 'reset_timer'
            state: "active"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input 'automation_enabled_helper'  # Disable the automation for 2 hours
          - service: input_number.set_value
            target:
              entity_id: !input 'toggle_count_helper'
            data:
              value: 0  # Reset the toggle count
          - delay: "02:00:00"  # Wait for 2 hours
          - service: input_boolean.turn_on
            target:
              entity_id: !input 'automation_enabled_helper'  # Re-enable automation

  # Reset the toggle count if the reset timer expires (after 2 minutes)
  - alias: Reset toggle count if no action after 2 minutes
    trigger:
      - platform: state
        entity_id: !input 'reset_timer'
        to: "idle"
    action:
      - service: input_number.set_value
        target:
          entity_id: !input 'toggle_count_helper'
        data:
          value: 0  # Reset toggle count

  # Turn automation back on if the light is off for 5 minutes
  - alias: Turn automation back on if light is off for 5 minutes
    trigger:
      - platform: state
        entity_id: !input 'light_off_timer'
        to: "idle"  # When the light-off timer expires (5 minutes)
    condition:
      - condition: state
        entity_id: !input 'automation_enabled_helper'
        state: "off"  # Only trigger if the automation is currently off
    action:
      - service: input_boolean.turn_on
        target:
          entity_id: !input 'automation_enabled_helper'  # Re-enable automation
