blueprint:
  name: Binary Sensor with Multiple Lights Control and Toggle Logic (No Helpers with Custom Times)
  description: |
    Turns on multiple lights when the binary sensor detects motion, disables the automation if any of the lights is toggled off and on twice within a short time,
    and re-enables it if any of the lights has been off for a configurable amount of time. This version allows you to set the reset time and the light-off duration without helpers, and does not use a timer.
  domain: automation
  input:
    binary_sensor:
      name: Binary Sensor
      description: The binary sensor to detect changes in state.
      selector:
        entity:
          domain: binary_sensor
    light_entities:
      name: Light Entities
      description: The lights to control.
      selector:
        target:
          entity:
            domain: light
    reset_time_duration:
      name: Reset Time Duration
      description: Time in minutes to wait before re-enabling the automation after it has been toggled off twice.
      default: 2
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutes"
    off_state_duration:
      name: Off State Duration
      description: Time in minutes that the light should be off before automation is re-enabled.
      default: 5
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: "minutes"

variables:
  toggle_count: 0
  automation_enabled: true
  reset_time_duration: "{{ reset_time_duration }}"  # Duration in minutes (set by user)
  off_state_duration: "{{ off_state_duration }}"  # Duration in minutes (set by user)

# Triggers (top level)
trigger:
  - platform: state
    entity_id: !input 'binary_sensor'
    to: "on"
  - platform: state
    entity_id: !input 'light_entities'
    to: "off"
    for:
      minutes: "{{ off_state_duration }}"  # Light has been off for the specified duration (in minutes)

# Conditions (only proceed if automation is enabled)
condition:
  - condition: template
    value_template: "{{ automation_enabled == true }}"

# Actions (responding to triggers)
action:
  # Action triggered by motion detection (turns on multiple lights)
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'binary_sensor'
            state: "on"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input 'light_entities'
            data: {}
          - variables:
              toggle_count: 0  # Reset toggle count when motion is detected

  # Action triggered when any of the lights turns off (track toggles)
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'light_entities'
            state: "off"
        sequence:
          - variables:
              toggle_count: "{{ toggle_count + 1 }}"  # Increment toggle count when any light turns off
          - choose:
              # If toggled off and on twice, disable automation
              - conditions:
                  - condition: template
                    value_template: "{{ toggle_count >= 2 }}"
                sequence:
                  - variables:
                      automation_enabled: false  # Disable automation
                  - delay: "{{ reset_time_duration * 60 }}"  # Wait for reset time in seconds
                  - variables:
                      automation_enabled: true  # Re-enable automation

  # Reset toggle count after inactivity (reset after the light has been off)
  - choose:
      - conditions:
          - condition: state
            entity_id: !input 'light_entities'
            state: "off"
            for:
              minutes: "{{ off_state_duration }}"  # Wait for the light to be off for the specified time
        sequence:
          - variables:
              toggle_count: 0  # Reset toggle count when the light has been off for the duration
          - variables:
              automation_enabled: true  # Re-enable automation after the light has been off for the specified duration
